$ git init (for intialization)

$ git remote add origin https://github.com/MandeepAdlab/Git-project.git (for remote connection)

git remote -v (to check connection)

git remote set-url origin https://githup.com/MandeepAdlab ( to change url of remote origin)

git add .

git branch -M main

git commit -m "first commit"

git push -u origin main

git clone https://github.com/MandeepAdlab/Git-project folder_name

cloing private repo

git clone -b <branch-name> https://<username>@github.com/<username>/<repo>.git

(((change editor ->>>>>>>>>>>>...      git config --global core.editor edtiorname

to put files in staging are  --->>>>>>>>>>>>>>>    git add --a

----------------------------------->>>>>> git commit -m "this is first commit "
add .gitignore to ignore files 
touch to create file

---------------
git diff (comparing working and staging area)
git diff --staged( compared last commit with current)

git commit -a -m "for commit only track file"

git log

git rm config.txt to remove through git

git mv cmd.txt git_command.txt  ( to rename file)

git rm --cached filename.txt (for ignoring files and make file untrack)

git log --since=2.days (filter log)

git log --pretty=format:"%h -- %an" (formating log) (for more visit git-scm.com/docs/git-log)

git commit --amend (for modifiy commit )

git restore --staged file.txt (to unstage stage file)

git checkout -- file.txt ( to restore file data from last  data )

git checkout -f ( to go to last commit before commit )

git remote add reponame giturl

git branch -M branchname

git push -u reponame branchname

---------------------------
genreating new ssh

 ssh-keygen -t rsa -b 4096 -C "test@example.com"
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa
tail  ~/.ssh/id_rsa.pub
----------------------------

 